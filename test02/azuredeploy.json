{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "CentOSVersion": {
      "type": "string",
      "defaultValue": "6.5",
      "allowedValues": [
        "6.5",
        "6.6",
        "7.0"
      ],
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOStu version. Allowed values: 6.5, 6.6, 7.0."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(resourceGroup().name,'sa01')]",
    "storageAccountType": "Standard_LRS",
    "vmName": "[concat(resourceGroup().name,parameters('dnsLabelPrefix'))]",
    "OSDiskName": "[concat(variables('vmName'),'osdisk')]",
    "dataDisk1VhdName": "[concat(variables('vmName'),'datadisk1')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "nicName": "[concat(variables('vmName'),'nic01')]",
    "addressPrefix": "172.18.0.0/16",
    "subnetName": "Subnet-1",
    "subnetPrefix": "172.18.1.0/24",
    "publicIPAddressName": "[concat(variables('vmName'),'pip01')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmSize": "Standard_A1",
    "virtualNetworkName": "[concat(resourceGroup().name,'vnet01')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",

      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('CentOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.chinacloudapi.cn/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.chinacloudapi.cn/',variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    }

],
  "outputs": {
    "storageAccountName":{
      "type": "string",
      "value":  "[variables('storageAccountName')]"
    },
    "storageAccountType":{
      "type": "string",
      "value":  "[variables('storageAccountType')]"
    },
    "vmName":{
      "type": "string",
      "value":  "[variables('vmName')]"
    },
    "OSDiskName":{
      "type": "string",
      "value":  "[variables('OSDiskName')]"
    },
    "dataDisk1VhdName":{
      "type": "string",
      "value":  "[variables('dataDisk1VhdName')]"
    },
    "imagePublisher":{
      "type": "string",
      "value":  "[variables('imagePublisher')]"
    },
    "imageOffer":{
      "type": "string",
      "value":  "[variables('imageOffer')]"
    },
    "nicName":{
      "type": "string",
      "value":  "[variables('nicName')]"
    },
    "addressPrefix":{
      "type": "string",
      "value":  "[variables('addressPrefix')]"
    },
    "subnetName":{
      "type": "string",
      "value":  "[variables('subnetName')]"
    },
    "subnetPrefix":{
      "type": "string",
      "value":  "[variables('subnetPrefix')]"
    },
    "publicIPAddressName":{
      "type": "string",
      "value":  "[variables('publicIPAddressName')]"
    },
    "publicIPAddressType":{
      "type": "string",
      "value":  "[variables('publicIPAddressType')]"
    },
    "vmStorageAccountContainerName":{
      "type": "string",
      "value":  "[variables('vmStorageAccountContainerName')]"
    },
    "virtualNetworkName":{
      "type": "string",
      "value":  "[variables('virtualNetworkName')]"
    },
    "vnetID":{
      "type": "string",
      "value":  "[variables('vnetID')]"
    },
    "subnetRef":{
      "type": "string",
      "value":  "[variables('subnetRef')]"
    },
    "apiVersion":{
      "type": "string",
      "value":  "[variables('apiVersion')]"
    },
     "hostname": {
         "type": "string",
         "value": "[concat(parameters('dnsLabelPrefix'), '.', resourceGroup().name, '.cloudapp.chinacloudapi.cn')]"
     },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.chinacloudapi.cn')]"
    }
  }
}
